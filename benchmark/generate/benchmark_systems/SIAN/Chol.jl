#! format: off

function chol(; np=AbstractAlgebra, k=np.QQ, ordering=:degrevlex)
    Rjet_new, (i_9, i_8, w_8, s_8, i_7, w_7, r_7, s_7, i_6, w_6, r_6, s_6, i_5, w_5, r_5, s_5, i_4, w_4, r_4, s_4, i_3, w_3, r_3, s_3, i_2, w_2, r_2, s_2, i_1, w_1, r_1, s_1, i_0, w_0, r_0, s_0, z_aux, mu_0, bi_0, bw_0, al_0, g_0, dz_0, k_0) = np.PolynomialRing(k, [string(v) for v in [:i_9, :i_8, :w_8, :s_8, :i_7, :w_7, :r_7, :s_7, :i_6, :w_6, :r_6, :s_6, :i_5, :w_5, :r_5, :s_5, :i_4, :w_4, :r_4, :s_4, :i_3, :w_3, :r_3, :s_3, :i_2, :w_2, :r_2, :s_2, :i_1, :w_1, :r_1, :s_1, :i_0, :w_0, :r_0, :s_0, :z_aux, :mu_0, :bi_0, :bw_0, :al_0, :g_0, :dz_0, :k_0]], ordering=ordering)
    [
        -s_0 - r_0 - i_0 + 3221031459139947918874,
        r_0 * mu_0 + r_0 * al_0^3 - i_0 * g_0 + r_1,
        -s_0 * w_0^2 * bw_0 - s_0 * i_0 * bi_0 + i_0 * mu_0 + i_0 * g_0 + i_1,
        s_0 * w_0^2 * bw_0 + s_0 * i_0 * bi_0 + s_0 * mu_0 - r_0 * al_0^3 + s_1 - mu_0,
        -i_0 * k_0 + 616888032780344789742129843980098635976590,
        -s_1 - r_1 - i_1 - 3809837638870149408295571888827371963568875,
        r_1 * mu_0 + r_1 * al_0^3 - i_1 * g_0 + r_2,
        -s_0 * w_1^2 * bw_0 - s_0 * i_1 * bi_0 - w_0^2 * s_1 * bw_0 - i_0 * s_1 * bi_0 + i_1 * mu_0 + i_1 * g_0 + i_2,
        s_0 * w_1^2 * bw_0 + s_0 * i_1 * bi_0 + w_0^2 * s_1 * bw_0 + i_0 * s_1 * bi_0 + s_1 * mu_0 - r_1 * al_0^3 + s_2,
        w_0^2 * dz_0^3 - i_0 * dz_0^3 + w_1^2,
        -i_1 * k_0 + 900778612526289567043424581199369165019882676771093422334935305643591899594574258944,
        -i_2 * k_0 - 803844800038917634474495967294715262159755764076024230946306835052876086467799796699862194363190953169475139491041006498918404,
        -s_0 * w_2^2 * bw_0 - s_0 * i_2 * bi_0 - w_0^2 * s_2 * bw_0 - i_0 * s_2 * bi_0 - 2 * s_1 * w_1^2 * bw_0 - 2 * s_1 * i_1 * bi_0 + i_2 * mu_0 + i_2 * g_0 + i_3,
        w_1^2 * dz_0^3 - i_1 * dz_0^3 + w_2^2,
        -i_3 * k_0 - 5426326914807511166649416498361717614748845249623364773833654325610699962430974730767249251786262894571588370526940774875397189290911605560045417594257401200702528019240,
        -s_0 * w_3^2 * bw_0 - s_0 * i_3 * bi_0 - w_0^2 * s_3 * bw_0 - i_0 * s_3 * bi_0 - 3 * s_1 * w_2^2 * bw_0 - 3 * s_1 * i_2 * bi_0 - 3 * w_1^2 * s_2 * bw_0 - 3 * i_1 * s_2 * bi_0 + i_3 * mu_0 + i_3 * g_0 + i_4,
        w_2^2 * dz_0^3 - i_2 * dz_0^3 + w_3^2,
        s_0 * w_2^2 * bw_0 + s_0 * i_2 * bi_0 + w_0^2 * s_2 * bw_0 + i_0 * s_2 * bi_0 + 2 * s_1 * w_1^2 * bw_0 + 2 * s_1 * i_1 * bi_0 + s_2 * mu_0 - r_2 * al_0^3 + s_3,
        -i_4 * k_0 + 21290019200068685922284918046352211211929871661239620445113494121066729158608197286956788312026737008015619703209234206196743259689794723564963439956136221676342180712243871590470408036123354769124397898564084080,
        -s_0 * w_4^2 * bw_0 - s_0 * i_4 * bi_0 - w_0^2 * s_4 * bw_0 - i_0 * s_4 * bi_0 - 4 * s_1 * w_3^2 * bw_0 - 4 * s_1 * i_3 * bi_0 - 4 * w_1^2 * s_3 * bw_0 - 4 * i_1 * s_3 * bi_0 - 6 * s_2 * w_2^2 * bw_0 - 6 * s_2 * i_2 * bi_0 + i_4 * mu_0 + i_4 * g_0 + i_5,
        s_0 * w_3^2 * bw_0 + s_0 * i_3 * bi_0 + w_0^2 * s_3 * bw_0 + i_0 * s_3 * bi_0 + 3 * s_1 * w_2^2 * bw_0 + 3 * s_1 * i_2 * bi_0 + 3 * w_1^2 * s_2 * bw_0 + 3 * i_1 * s_2 * bi_0 + s_3 * mu_0 - r_3 * al_0^3 + s_4,
        w_3^2 * dz_0^3 - i_3 * dz_0^3 + w_4^2,
        r_2 * mu_0 + r_2 * al_0^3 - i_2 * g_0 + r_3,
        -i_5 * k_0 + 114362193125330460793800807369825311891602237327803989501653436497614972309314317068676005256952142261858086061309415506811405377938575370938474991702432725637316391838333472616903651918023396653280416262137221519563355442950339239373055980149602119698224,
        -s_0 * w_5^2 * bw_0 - s_0 * i_5 * bi_0 - w_0^2 * s_5 * bw_0 - i_0 * s_5 * bi_0 - 5 * s_1 * w_4^2 * bw_0 - 5 * s_1 * i_4 * bi_0 - 5 * w_1^2 * s_4 * bw_0 - 5 * i_1 * s_4 * bi_0 - 10 * s_2 * w_3^2 * bw_0 - 10 * s_2 * i_3 * bi_0 - 10 * w_2^2 * s_3 * bw_0 - 10 * i_2 * s_3 * bi_0 + i_5 * mu_0 + i_5 * g_0 + i_6,
        s_0 * w_4^2 * bw_0 + s_0 * i_4 * bi_0 + w_0^2 * s_4 * bw_0 + i_0 * s_4 * bi_0 + 4 * s_1 * w_3^2 * bw_0 + 4 * s_1 * i_3 * bi_0 + 4 * w_1^2 * s_3 * bw_0 + 4 * i_1 * s_3 * bi_0 + 6 * s_2 * w_2^2 * bw_0 + 6 * s_2 * i_2 * bi_0 + s_4 * mu_0 - r_4 * al_0^3 + s_5,
        w_4^2 * dz_0^3 - i_4 * dz_0^3 + w_5^2,
        r_3 * mu_0 + r_3 * al_0^3 - i_3 * g_0 + r_4,
        -i_6 * k_0 - 1158358162852566143283179342878205734811754277558188721159443699121527118794863473689391572823103621505519350510335636301380624500317389093314639663441414429049003343962440234389546736187006899002024784257621303828790658323261537153986808609105506281415235389610719956654471283608550533052897314392,
        -s_0 * w_6^2 * bw_0 - s_0 * i_6 * bi_0 - w_0^2 * s_6 * bw_0 - i_0 * s_6 * bi_0 - 6 * s_1 * w_5^2 * bw_0 - 6 * s_1 * i_5 * bi_0 - 6 * w_1^2 * s_5 * bw_0 - 6 * i_1 * s_5 * bi_0 - 15 * s_2 * w_4^2 * bw_0 - 15 * s_2 * i_4 * bi_0 - 15 * w_2^2 * s_4 * bw_0 - 15 * i_2 * s_4 * bi_0 - 20 * s_3 * w_3^2 * bw_0 - 20 * s_3 * i_3 * bi_0 + i_6 * mu_0 + i_6 * g_0 + i_7,
        w_5^2 * dz_0^3 - i_5 * dz_0^3 + w_6^2,
        s_0 * w_5^2 * bw_0 + s_0 * i_5 * bi_0 + w_0^2 * s_5 * bw_0 + i_0 * s_5 * bi_0 + 5 * s_1 * w_4^2 * bw_0 + 5 * s_1 * i_4 * bi_0 + 5 * w_1^2 * s_4 * bw_0 + 5 * i_1 * s_4 * bi_0 + 10 * s_2 * w_3^2 * bw_0 + 10 * s_2 * i_3 * bi_0 + 10 * w_2^2 * s_3 * bw_0 + 10 * i_2 * s_3 * bi_0 + s_5 * mu_0 - r_5 * al_0^3 + s_6,
        r_4 * mu_0 + r_4 * al_0^3 - i_4 * g_0 + r_5,
        -i_7 * k_0 - 3932039687481497548658336440854597307570762994740984209929848001192109443600615935990678529822534661985227918081747393448842707896688223312252865575360738574043095383287329171482765735663732756576174655220897285267231462909949002677399379194190507258860351661348522275615986856832193360157503180266701373671407051279068370876895702223657696,
        -s_0 * w_7^2 * bw_0 - s_0 * i_7 * bi_0 - w_0^2 * s_7 * bw_0 - i_0 * s_7 * bi_0 - 7 * s_1 * w_6^2 * bw_0 - 7 * s_1 * i_6 * bi_0 - 7 * w_1^2 * s_6 * bw_0 - 7 * i_1 * s_6 * bi_0 - 21 * s_2 * w_5^2 * bw_0 - 21 * s_2 * i_5 * bi_0 - 21 * w_2^2 * s_5 * bw_0 - 21 * i_2 * s_5 * bi_0 - 35 * s_3 * w_4^2 * bw_0 - 35 * s_3 * i_4 * bi_0 - 35 * w_3^2 * s_4 * bw_0 - 35 * i_3 * s_4 * bi_0 + i_7 * mu_0 + i_7 * g_0 + i_8,
        w_6^2 * dz_0^3 - i_6 * dz_0^3 + w_7^2,
        s_0 * w_6^2 * bw_0 + s_0 * i_6 * bi_0 + w_0^2 * s_6 * bw_0 + i_0 * s_6 * bi_0 + 6 * s_1 * w_5^2 * bw_0 + 6 * s_1 * i_5 * bi_0 + 6 * w_1^2 * s_5 * bw_0 + 6 * i_1 * s_5 * bi_0 + 15 * s_2 * w_4^2 * bw_0 + 15 * s_2 * i_4 * bi_0 + 15 * w_2^2 * s_4 * bw_0 + 15 * i_2 * s_4 * bi_0 + 20 * s_3 * w_3^2 * bw_0 + 20 * s_3 * i_3 * bi_0 + s_6 * mu_0 - r_6 * al_0^3 + s_7,
        r_5 * mu_0 + r_5 * al_0^3 - i_5 * g_0 + r_6,
        -i_8 * k_0 + 104044934047309850690056975324075382766920157930725080289610976811350995418532834633808130122570488950434875484780706308368825746481575960935673522854279784838682160108756121444223798627929390366072776059002502529050452682799568903965454924524203996059394768315177751545929236617951183918902152005578570391727338153954778488109517260994609673104567896198174444993740135154047632782440,
        -s_0 * w_8^2 * bw_0 - s_0 * i_8 * bi_0 - w_0^2 * s_8 * bw_0 - i_0 * s_8 * bi_0 - 8 * s_1 * w_7^2 * bw_0 - 8 * s_1 * i_7 * bi_0 - 8 * w_1^2 * s_7 * bw_0 - 8 * i_1 * s_7 * bi_0 - 28 * s_2 * w_6^2 * bw_0 - 28 * s_2 * i_6 * bi_0 - 28 * w_2^2 * s_6 * bw_0 - 28 * i_2 * s_6 * bi_0 - 56 * s_3 * w_5^2 * bw_0 - 56 * s_3 * i_5 * bi_0 - 56 * w_3^2 * s_5 * bw_0 - 56 * i_3 * s_5 * bi_0 - 70 * s_4 * w_4^2 * bw_0 - 70 * s_4 * i_4 * bi_0 + i_8 * mu_0 + i_8 * g_0 + i_9,
        s_0 * w_7^2 * bw_0 + s_0 * i_7 * bi_0 + w_0^2 * s_7 * bw_0 + i_0 * s_7 * bi_0 + 7 * s_1 * w_6^2 * bw_0 + 7 * s_1 * i_6 * bi_0 + 7 * w_1^2 * s_6 * bw_0 + 7 * i_1 * s_6 * bi_0 + 21 * s_2 * w_5^2 * bw_0 + 21 * s_2 * i_5 * bi_0 + 21 * w_2^2 * s_5 * bw_0 + 21 * i_2 * s_5 * bi_0 + 35 * s_3 * w_4^2 * bw_0 + 35 * s_3 * i_4 * bi_0 + 35 * w_3^2 * s_4 * bw_0 + 35 * i_3 * s_4 * bi_0 + s_7 * mu_0 - r_7 * al_0^3 + s_8,
        w_7^2 * dz_0^3 - i_7 * dz_0^3 + w_8^2,
        r_6 * mu_0 + r_6 * al_0^3 - i_6 * g_0 + r_7,
        -s_2 - r_2 - i_2 + 4506277886036949372607374302598394953377655361997717110283390625,
        -s_3 - r_3 - i_3 - 5330027762602443157851507474222407370596248896186565629516591463513813362760388671875,
        -s_4 - r_4 - i_4 + 6304359533206085113515926659481737684429642037172379663350511589944842245990667980618139575985974853515625,
        -s_5 - r_5 - i_5 - 7456799644233100612490153711200739669379155559658914873421620877999457830858389020478538159823608486543270862767843963623046875,
        -s_6 - r_6 - i_6 + 8819906390389116225370052704084347636591114421741662652175719736479588073974319756842427030649971700137048768091585842034944835994949558258056640625,
        -s_7 - r_7 - i_7 - 10432189739117928169391692112706937511004804875643862378601380418576005473659262369799370783710366413538983378981892380838422000968211192763240868069631747722625732421875,
        -i_9 * k_0 + 67297679794290576521836339439456610298709374407234560494355132343591856727934190868607113117007500885352657876052784797353084101434498549000193941717551275276821397450831829077998831081202897321838447615049838889726050497398287284788167106717724976460329871274331507327065506003912431670202320498154824841953316556820822724367713012843728724190363656890250031667300671707807040584292544333213732699986845306810293187730348784,
        z_aux - 1
    ]
end

function chol_1_out(; np=AbstractAlgebra, k=np.QQ, ordering=:degrevlex)
    Rjet_new, (i_10, s_9, i_9, w_9, s_8, i_8, w_8, r_8, s_7, i_7, w_7, r_7, s_6, i_6, w_6, r_6, s_5, i_5, w_5, r_5, s_4, i_4, w_4, r_4, s_3, i_3, w_3, r_3, s_2, i_2, w_2, r_2, s_1, i_1, w_1, r_1, s_0, i_0, w_0, r_0, z_aux, mu_0, bi_0, bw_0, al_0, g_0, dz_0) = np.PolynomialRing(k, [string(v) for v in [:i_10, :s_9, :i_9, :w_9, :s_8, :i_8, :w_8, :r_8, :s_7, :i_7, :w_7, :r_7, :s_6, :i_6, :w_6, :r_6, :s_5, :i_5, :w_5, :r_5, :s_4, :i_4, :w_4, :r_4, :s_3, :i_3, :w_3, :r_3, :s_2, :i_2, :w_2, :r_2, :s_1, :i_1, :w_1, :r_1, :s_0, :i_0, :w_0, :r_0, :z_aux, :mu_0, :bi_0, :bw_0, :al_0, :g_0, :dz_0]], ordering=ordering)
    [
        -i_0 + 18891872358142496827,
        -w_0 * s_0 * bw_0 - i_0 * s_0 * bi_0 + i_0 * mu_0 + i_0 * g_0 + i_1,
        -i_1 + 22138522880074548422270205627725684863170200371713641567744,
        -w_0 * s_1 * bw_0 - i_0 * s_1 * bi_0 - s_0 * w_1 * bw_0 - s_0 * i_1 * bi_0 + i_1 * mu_0 + i_1 * g_0 + i_2,
        w_0 * dz_0 - i_0 * dz_0 + w_1,
        -r_0 * al_0 + w_0 * s_0 * bw_0 + i_0 * s_0 * bi_0 + s_0 * mu_0 + s_1 - mu_0,
        -i_2 - 32263860665551605670980402250616303548721706016020805932110154363219215098943433091104724264106213,
        -w_0 * s_2 * bw_0 - i_0 * s_2 * bi_0 - s_0 * w_2 * bw_0 - s_0 * i_2 * bi_0 - 2 * w_1 * s_1 * bw_0 - 2 * i_1 * s_1 * bi_0 + i_2 * mu_0 + i_2 * g_0 + i_3,
        w_1 * dz_0 - i_1 * dz_0 + w_2,
        w_0 * s_1 * bw_0 + i_0 * s_1 * bi_0 + s_0 * w_1 * bw_0 + s_0 * i_1 * bi_0 - r_1 * al_0 + s_1 * mu_0 + s_2,
        r_0 * mu_0 + r_0 * al_0 - i_0 * g_0 + r_1,
        -i_3 + 5378049515010741596173878669841085749653680851749840125764106179057040057908661036120579372764811269665197864100564437259733856796538042,
        -w_0 * s_3 * bw_0 - i_0 * s_3 * bi_0 - s_0 * w_3 * bw_0 - s_0 * i_3 * bi_0 - 3 * w_1 * s_2 * bw_0 - 3 * i_1 * s_2 * bi_0 - 3 * s_1 * w_2 * bw_0 - 3 * s_1 * i_2 * bi_0 + i_3 * mu_0 + i_3 * g_0 + i_4,
        w_0 * s_2 * bw_0 + i_0 * s_2 * bi_0 + s_0 * w_2 * bw_0 + s_0 * i_2 * bi_0 + 2 * w_1 * s_1 * bw_0 + 2 * i_1 * s_1 * bi_0 - r_2 * al_0 + s_2 * mu_0 + s_3,
        w_2 * dz_0 - i_2 * dz_0 + w_3,
        r_1 * mu_0 + r_1 * al_0 - i_1 * g_0 + r_2,
        -i_4 + 174225188030247832772108397678531019337541082060619046075965970172421710037001016397940260555429069479006749037114766033213154105899516433872906003001391468373740161648526641322,
        -w_0 * s_4 * bw_0 - i_0 * s_4 * bi_0 - s_0 * w_4 * bw_0 - s_0 * i_4 * bi_0 - 4 * w_1 * s_3 * bw_0 - 4 * i_1 * s_3 * bi_0 - 4 * s_1 * w_3 * bw_0 - 4 * s_1 * i_3 * bi_0 - 6 * w_2 * s_2 * bw_0 - 6 * i_2 * s_2 * bi_0 + i_4 * mu_0 + i_4 * g_0 + i_5,
        w_3 * dz_0 - i_3 * dz_0 + w_4,
        w_0 * s_3 * bw_0 + i_0 * s_3 * bi_0 + s_0 * w_3 * bw_0 + s_0 * i_3 * bi_0 + 3 * w_1 * s_2 * bw_0 + 3 * i_1 * s_2 * bi_0 + 3 * s_1 * w_2 * bw_0 + 3 * s_1 * i_2 * bi_0 - r_3 * al_0 + s_3 * mu_0 + s_4,
        r_2 * mu_0 + r_2 * al_0 - i_2 * g_0 + r_3,
        -i_5 - 559705103365248226096055039761325471431572239131984374624682760944042353567254080734166652495506741682455655158383281936626405873630878889957545020839783362669999488100444266004004202540231016856938535760776261363510,
        -w_0 * s_5 * bw_0 - i_0 * s_5 * bi_0 - s_0 * w_5 * bw_0 - s_0 * i_5 * bi_0 - 5 * w_1 * s_4 * bw_0 - 5 * i_1 * s_4 * bi_0 - 5 * s_1 * w_4 * bw_0 - 5 * s_1 * i_4 * bi_0 - 10 * w_2 * s_3 * bw_0 - 10 * i_2 * s_3 * bi_0 - 10 * s_2 * w_3 * bw_0 - 10 * s_2 * i_3 * bi_0 + i_5 * mu_0 + i_5 * g_0 + i_6,
        w_4 * dz_0 - i_4 * dz_0 + w_5,
        w_0 * s_4 * bw_0 + i_0 * s_4 * bi_0 + s_0 * w_4 * bw_0 + s_0 * i_4 * bi_0 + 4 * w_1 * s_3 * bw_0 + 4 * i_1 * s_3 * bi_0 + 4 * s_1 * w_3 * bw_0 + 4 * s_1 * i_3 * bi_0 + 6 * w_2 * s_2 * bw_0 + 6 * i_2 * s_2 * bi_0 - r_4 * al_0 + s_4 * mu_0 + s_5,
        r_3 * mu_0 + r_3 * al_0 - i_3 * g_0 + r_4,
        -i_6 - 675449579801680918251487072232082891591498524762747090345043503130335991828502402517982248180876051562663965954882998692873529312062986722234767042397504456207732007945884821112077401681539791661454000880362647184572613240983131333013535408772908295245000,
        -w_0 * s_6 * bw_0 - i_0 * s_6 * bi_0 - s_0 * w_6 * bw_0 - s_0 * i_6 * bi_0 - 6 * w_1 * s_5 * bw_0 - 6 * i_1 * s_5 * bi_0 - 6 * s_1 * w_5 * bw_0 - 6 * s_1 * i_5 * bi_0 - 15 * w_2 * s_4 * bw_0 - 15 * i_2 * s_4 * bi_0 - 15 * s_2 * w_4 * bw_0 - 15 * s_2 * i_4 * bi_0 - 20 * w_3 * s_3 * bw_0 - 20 * i_3 * s_3 * bi_0 + i_6 * mu_0 + i_6 * g_0 + i_7,
        w_0 * s_5 * bw_0 + i_0 * s_5 * bi_0 + s_0 * w_5 * bw_0 + s_0 * i_5 * bi_0 + 5 * w_1 * s_4 * bw_0 + 5 * i_1 * s_4 * bi_0 + 5 * s_1 * w_4 * bw_0 + 5 * s_1 * i_4 * bi_0 + 10 * w_2 * s_3 * bw_0 + 10 * i_2 * s_3 * bi_0 + 10 * s_2 * w_3 * bw_0 + 10 * s_2 * i_3 * bi_0 - r_5 * al_0 + s_5 * mu_0 + s_6,
        w_5 * dz_0 - i_5 * dz_0 + w_6,
        r_4 * mu_0 + r_4 * al_0 - i_4 * g_0 + r_5,
        -i_7 + 14440535045744910381554333204454752026354662283312785786311565939416719661070751300434736074279226605924326780454092517338314808219232005943460149792557159926140262393881429099550234342278233992344318273057223198997745466208816822507022068476154454554036554266992193385848414953231333303639043872,
        -w_0 * s_7 * bw_0 - i_0 * s_7 * bi_0 - s_0 * w_7 * bw_0 - s_0 * i_7 * bi_0 - 7 * w_1 * s_6 * bw_0 - 7 * i_1 * s_6 * bi_0 - 7 * s_1 * w_6 * bw_0 - 7 * s_1 * i_6 * bi_0 - 21 * w_2 * s_5 * bw_0 - 21 * i_2 * s_5 * bi_0 - 21 * s_2 * w_5 * bw_0 - 21 * s_2 * i_5 * bi_0 - 35 * w_3 * s_4 * bw_0 - 35 * i_3 * s_4 * bi_0 - 35 * s_3 * w_4 * bw_0 - 35 * s_3 * i_4 * bi_0 + i_7 * mu_0 + i_7 * g_0 + i_8,
        w_0 * s_6 * bw_0 + i_0 * s_6 * bi_0 + s_0 * w_6 * bw_0 + s_0 * i_6 * bi_0 + 6 * w_1 * s_5 * bw_0 + 6 * i_1 * s_5 * bi_0 + 6 * s_1 * w_5 * bw_0 + 6 * s_1 * i_5 * bi_0 + 15 * w_2 * s_4 * bw_0 + 15 * i_2 * s_4 * bi_0 + 15 * s_2 * w_4 * bw_0 + 15 * s_2 * i_4 * bi_0 + 20 * w_3 * s_3 * bw_0 + 20 * i_3 * s_3 * bi_0 - r_6 * al_0 + s_6 * mu_0 + s_7,
        w_6 * dz_0 - i_6 * dz_0 + w_7,
        r_5 * mu_0 + r_5 * al_0 - i_5 * g_0 + r_6,
        -i_8 - 47158275461052684428970333432883034226159720744216027614905540702615725826664658268139571178232982153767325187192224120665846749671935017682468215988987315541773507773863267925087349687022563859598063839826190662064840538465777098838590091374512690025281522682123082950349580926790690104527550596133922335963410172210214223106536776244,
        -w_0 * s_8 * bw_0 - i_0 * s_8 * bi_0 - s_0 * w_8 * bw_0 - s_0 * i_8 * bi_0 - 8 * w_1 * s_7 * bw_0 - 8 * i_1 * s_7 * bi_0 - 8 * s_1 * w_7 * bw_0 - 8 * s_1 * i_7 * bi_0 - 28 * w_2 * s_6 * bw_0 - 28 * i_2 * s_6 * bi_0 - 28 * s_2 * w_6 * bw_0 - 28 * s_2 * i_6 * bi_0 - 56 * w_3 * s_5 * bw_0 - 56 * i_3 * s_5 * bi_0 - 56 * s_3 * w_5 * bw_0 - 56 * s_3 * i_5 * bi_0 - 70 * w_4 * s_4 * bw_0 - 70 * i_4 * s_4 * bi_0 + i_8 * mu_0 + i_8 * g_0 + i_9,
        w_7 * dz_0 - i_7 * dz_0 + w_8,
        w_0 * s_7 * bw_0 + i_0 * s_7 * bi_0 + s_0 * w_7 * bw_0 + s_0 * i_7 * bi_0 + 7 * w_1 * s_6 * bw_0 + 7 * i_1 * s_6 * bi_0 + 7 * s_1 * w_6 * bw_0 + 7 * s_1 * i_6 * bi_0 + 21 * w_2 * s_5 * bw_0 + 21 * i_2 * s_5 * bi_0 + 21 * s_2 * w_5 * bw_0 + 21 * s_2 * i_5 * bi_0 + 35 * w_3 * s_4 * bw_0 + 35 * i_3 * s_4 * bi_0 + 35 * s_3 * w_4 * bw_0 + 35 * s_3 * i_4 * bi_0 - r_7 * al_0 + s_7 * mu_0 + s_8,
        r_6 * mu_0 + r_6 * al_0 - i_6 * g_0 + r_7,
        -i_9 - 276360655857110098138685566921607768033362253606672505086132700620407523499504368632729336041384563252161612532641598271021646933881413296982634824957002826660416137529373433668345834421306295377427330730603069852431902778396135177166707617300655593060277647142967677072957051596872652559436518041298047482810494281545071962238653862138112537182677847674273206401002301694304,
        -w_0 * s_9 * bw_0 - i_0 * s_9 * bi_0 - s_0 * w_9 * bw_0 - s_0 * i_9 * bi_0 - 9 * w_1 * s_8 * bw_0 - 9 * i_1 * s_8 * bi_0 - 9 * s_1 * w_8 * bw_0 - 9 * s_1 * i_8 * bi_0 - 36 * w_2 * s_7 * bw_0 - 36 * i_2 * s_7 * bi_0 - 36 * s_2 * w_7 * bw_0 - 36 * s_2 * i_7 * bi_0 - 84 * w_3 * s_6 * bw_0 - 84 * i_3 * s_6 * bi_0 - 84 * s_3 * w_6 * bw_0 - 84 * s_3 * i_6 * bi_0 - 126 * w_4 * s_5 * bw_0 - 126 * i_4 * s_5 * bi_0 - 126 * s_4 * w_5 * bw_0 - 126 * s_4 * i_5 * bi_0 + i_9 * mu_0 + i_9 * g_0 + i_10,
        w_8 * dz_0 - i_8 * dz_0 + w_9,
        w_0 * s_8 * bw_0 + i_0 * s_8 * bi_0 + s_0 * w_8 * bw_0 + s_0 * i_8 * bi_0 + 8 * w_1 * s_7 * bw_0 + 8 * i_1 * s_7 * bi_0 + 8 * s_1 * w_7 * bw_0 + 8 * s_1 * i_7 * bi_0 + 28 * w_2 * s_6 * bw_0 + 28 * i_2 * s_6 * bi_0 + 28 * s_2 * w_6 * bw_0 + 28 * s_2 * i_6 * bi_0 + 56 * w_3 * s_5 * bw_0 + 56 * i_3 * s_5 * bi_0 + 56 * s_3 * w_5 * bw_0 + 56 * s_3 * i_5 * bi_0 + 70 * w_4 * s_4 * bw_0 + 70 * i_4 * s_4 * bi_0 - r_8 * al_0 + s_8 * mu_0 + s_9,
        r_7 * mu_0 + r_7 * al_0 - i_7 * g_0 + r_8,
        -i_10 + 3696032818236385172961146678285275675790869071029340316193246269553586436459199892682698642155545096418033705616997412443056271496642604892734566591290838442530051067779723408344636538016657481989630073924819289490077638207256316288800271482383243796277398945249911381041618761649706410546115372353939096395369443759308901378019798383964051269187340662735613949086242749294161318225833399760311593334415913868908984,
        z_aux - 1
    ]
end

function chol_with_weights(; np=AbstractAlgebra, k=np.QQ, ordering=:degrevlex)
    Rjet_new, (i_9, i_8, w_8, s_8, i_7, w_7, r_7, s_7, i_6, w_6, r_6, s_6, i_5, w_5, r_5, s_5, i_4, w_4, r_4, s_4, i_3, w_3, r_3, s_3, i_2, w_2, r_2, s_2, i_1, w_1, r_1, s_1, i_0, w_0, r_0, s_0, z_aux, mu_0, bi_0, bw_0, al_0, g_0, dz_0, k_0) = np.PolynomialRing(k, [string(v) for v in [:i_9, :i_8, :w_8, :s_8, :i_7, :w_7, :r_7, :s_7, :i_6, :w_6, :r_6, :s_6, :i_5, :w_5, :r_5, :s_5, :i_4, :w_4, :r_4, :s_4, :i_3, :w_3, :r_3, :s_3, :i_2, :w_2, :r_2, :s_2, :i_1, :w_1, :r_1, :s_1, :i_0, :w_0, :r_0, :s_0, :z_aux, :mu_0, :bi_0, :bw_0, :al_0, :g_0, :dz_0, :k_0]], ordering=ordering)
    [
        -s_0 - r_0 - i_0 + 1603769238896816214967,
        r_0 * mu_0 + r_0 * al_0^3 - i_0 * g_0 + r_1,
        -s_0 * w_0^2 * bw_0 - s_0 * i_0 * bi_0 + i_0 * mu_0 + i_0 * g_0 + i_1,
        s_0 * w_0^2 * bw_0 + s_0 * i_0 * bi_0 + s_0 * mu_0 - r_0 * al_0^3 + s_1 - mu_0,
        -i_0 * k_0 + 595327987302164554305719409047221718973190,
        -s_1 - r_1 - i_1 - 2295979027718216934767209763256736461446796,
        r_1 * mu_0 + r_1 * al_0^3 - i_1 * g_0 + r_2,
        -s_0 * w_1^2 * bw_0 - s_0 * i_1 * bi_0 - w_0^2 * s_1 * bw_0 - i_0 * s_1 * bi_0 + i_1 * mu_0 + i_1 * g_0 + i_2,
        s_0 * w_1^2 * bw_0 + s_0 * i_1 * bi_0 + w_0^2 * s_1 * bw_0 + i_0 * s_1 * bi_0 + s_1 * mu_0 - r_1 * al_0^3 + s_2,
        w_0^2 * dz_0^3 - i_0 * dz_0^3 + w_1^2,
        -i_1 * k_0 + 636692183328767626137552385976859893554257477016198670545776289641525787037900404524,
        -i_2 * k_0 - 253183371781309364586145385890869772749297706240558072233127470951767367490336523579602460497824782296320705378335408077516896,
        -s_0 * w_2^2 * bw_0 - s_0 * i_2 * bi_0 - w_0^2 * s_2 * bw_0 - i_0 * s_2 * bi_0 - 2 * s_1 * w_1^2 * bw_0 - 2 * s_1 * i_1 * bi_0 + i_2 * mu_0 + i_2 * g_0 + i_3,
        w_1^2 * dz_0^3 - i_1 * dz_0^3 + w_2^2,
        -i_3 * k_0 - 1053986230721126883092731149369684604850954487017186773909037868660318418364110667261126451553401093399855159715282846926088259530965293499619886123502493449139590724704,
        -s_0 * w_3^2 * bw_0 - s_0 * i_3 * bi_0 - w_0^2 * s_3 * bw_0 - i_0 * s_3 * bi_0 - 3 * s_1 * w_2^2 * bw_0 - 3 * s_1 * i_2 * bi_0 - 3 * w_1^2 * s_2 * bw_0 - 3 * i_1 * s_2 * bi_0 + i_3 * mu_0 + i_3 * g_0 + i_4,
        w_2^2 * dz_0^3 - i_2 * dz_0^3 + w_3^2,
        s_0 * w_2^2 * bw_0 + s_0 * i_2 * bi_0 + w_0^2 * s_2 * bw_0 + i_0 * s_2 * bi_0 + 2 * s_1 * w_1^2 * bw_0 + 2 * s_1 * i_1 * bi_0 + s_2 * mu_0 - r_2 * al_0^3 + s_3,
        -i_4 * k_0 + 1796595387405670132418785515384945889309310645226993355382888355435146593872197165413175842931398401762554008982522459060275848112567269182798505538327120480348105724245096697537909128352707801957559158064737824,
        -s_0 * w_4^2 * bw_0 - s_0 * i_4 * bi_0 - w_0^2 * s_4 * bw_0 - i_0 * s_4 * bi_0 - 4 * s_1 * w_3^2 * bw_0 - 4 * s_1 * i_3 * bi_0 - 4 * w_1^2 * s_3 * bw_0 - 4 * i_1 * s_3 * bi_0 - 6 * s_2 * w_2^2 * bw_0 - 6 * s_2 * i_2 * bi_0 + i_4 * mu_0 + i_4 * g_0 + i_5,
        s_0 * w_3^2 * bw_0 + s_0 * i_3 * bi_0 + w_0^2 * s_3 * bw_0 + i_0 * s_3 * bi_0 + 3 * s_1 * w_2^2 * bw_0 + 3 * s_1 * i_2 * bi_0 + 3 * w_1^2 * s_2 * bw_0 + 3 * i_1 * s_2 * bi_0 + s_3 * mu_0 - r_3 * al_0^3 + s_4,
        w_3^2 * dz_0^3 - i_3 * dz_0^3 + w_4^2,
        r_2 * mu_0 + r_2 * al_0^3 - i_2 * g_0 + r_3,
        -i_5 * k_0 + 6383595756966571318541258668032598643935338610513006849295848781202816792747379866124249401644152456524713937603362231336008788793180922093806687179965193170950247547941965502700937284163061223059928251080705656558349588657616886208877966147683756475040,
        -s_0 * w_5^2 * bw_0 - s_0 * i_5 * bi_0 - w_0^2 * s_5 * bw_0 - i_0 * s_5 * bi_0 - 5 * s_1 * w_4^2 * bw_0 - 5 * s_1 * i_4 * bi_0 - 5 * w_1^2 * s_4 * bw_0 - 5 * i_1 * s_4 * bi_0 - 10 * s_2 * w_3^2 * bw_0 - 10 * s_2 * i_3 * bi_0 - 10 * w_2^2 * s_3 * bw_0 - 10 * i_2 * s_3 * bi_0 + i_5 * mu_0 + i_5 * g_0 + i_6,
        s_0 * w_4^2 * bw_0 + s_0 * i_4 * bi_0 + w_0^2 * s_4 * bw_0 + i_0 * s_4 * bi_0 + 4 * s_1 * w_3^2 * bw_0 + 4 * s_1 * i_3 * bi_0 + 4 * w_1^2 * s_3 * bw_0 + 4 * i_1 * s_3 * bi_0 + 6 * s_2 * w_2^2 * bw_0 + 6 * s_2 * i_2 * bi_0 + s_4 * mu_0 - r_4 * al_0^3 + s_5,
        w_4^2 * dz_0^3 - i_4 * dz_0^3 + w_5^2,
        r_3 * mu_0 + r_3 * al_0^3 - i_3 * g_0 + r_4,
        -i_6 * k_0 - 26430377817145985593597721357174616850547512565321824116400106657623864070063713108299447433465099040387597796574228965258397979275442760145200588870927410878915034204530221757665058156965845831130862971047179619028134706468392840834972518727132804743150217665060297474828426462692420665072881632,
        -s_0 * w_6^2 * bw_0 - s_0 * i_6 * bi_0 - w_0^2 * s_6 * bw_0 - i_0 * s_6 * bi_0 - 6 * s_1 * w_5^2 * bw_0 - 6 * s_1 * i_5 * bi_0 - 6 * w_1^2 * s_5 * bw_0 - 6 * i_1 * s_5 * bi_0 - 15 * s_2 * w_4^2 * bw_0 - 15 * s_2 * i_4 * bi_0 - 15 * w_2^2 * s_4 * bw_0 - 15 * i_2 * s_4 * bi_0 - 20 * s_3 * w_3^2 * bw_0 - 20 * s_3 * i_3 * bi_0 + i_6 * mu_0 + i_6 * g_0 + i_7,
        w_5^2 * dz_0^3 - i_5 * dz_0^3 + w_6^2,
        s_0 * w_5^2 * bw_0 + s_0 * i_5 * bi_0 + w_0^2 * s_5 * bw_0 + i_0 * s_5 * bi_0 + 5 * s_1 * w_4^2 * bw_0 + 5 * s_1 * i_4 * bi_0 + 5 * w_1^2 * s_4 * bw_0 + 5 * i_1 * s_4 * bi_0 + 10 * s_2 * w_3^2 * bw_0 + 10 * s_2 * i_3 * bi_0 + 10 * w_2^2 * s_3 * bw_0 + 10 * i_2 * s_3 * bi_0 + s_5 * mu_0 - r_5 * al_0^3 + s_6,
        r_4 * mu_0 + r_4 * al_0^3 - i_4 * g_0 + r_5,
        -i_7 * k_0 - 71158926403592000728967646559695475270289999161293734332580624856824124765611285639501611844687083379381382022782416829337325793683524949193326307099589130556857849919816378049167955242579176382492363664816282983742134071982495151033794728189099980333164329754548378842961645313792064905238773871074433103060985260219260051085714089947744,
        -s_0 * w_7^2 * bw_0 - s_0 * i_7 * bi_0 - w_0^2 * s_7 * bw_0 - i_0 * s_7 * bi_0 - 7 * s_1 * w_6^2 * bw_0 - 7 * s_1 * i_6 * bi_0 - 7 * w_1^2 * s_6 * bw_0 - 7 * i_1 * s_6 * bi_0 - 21 * s_2 * w_5^2 * bw_0 - 21 * s_2 * i_5 * bi_0 - 21 * w_2^2 * s_5 * bw_0 - 21 * i_2 * s_5 * bi_0 - 35 * s_3 * w_4^2 * bw_0 - 35 * s_3 * i_4 * bi_0 - 35 * w_3^2 * s_4 * bw_0 - 35 * i_3 * s_4 * bi_0 + i_7 * mu_0 + i_7 * g_0 + i_8,
        w_6^2 * dz_0^3 - i_6 * dz_0^3 + w_7^2,
        s_0 * w_6^2 * bw_0 + s_0 * i_6 * bi_0 + w_0^2 * s_6 * bw_0 + i_0 * s_6 * bi_0 + 6 * s_1 * w_5^2 * bw_0 + 6 * s_1 * i_5 * bi_0 + 6 * w_1^2 * s_5 * bw_0 + 6 * i_1 * s_5 * bi_0 + 15 * s_2 * w_4^2 * bw_0 + 15 * s_2 * i_4 * bi_0 + 15 * w_2^2 * s_4 * bw_0 + 15 * i_2 * s_4 * bi_0 + 20 * s_3 * w_3^2 * bw_0 + 20 * s_3 * i_3 * bi_0 + s_6 * mu_0 - r_6 * al_0^3 + s_7,
        r_5 * mu_0 + r_5 * al_0^3 - i_5 * g_0 + r_6,
        -i_8 * k_0 + 649277429617695155387375749774045311827366247242499959576903912828058303503465664934303382267612967766942703671600405058766389604019796125798079713270912401204926845291584807576034446510817126694247736430528860064330869255842447245807337577977584553300430007476763493464877297956968633331980443578868192644173271795372560014586264604330665540707185543883352102112169518567514142752,
        -s_0 * w_8^2 * bw_0 - s_0 * i_8 * bi_0 - w_0^2 * s_8 * bw_0 - i_0 * s_8 * bi_0 - 8 * s_1 * w_7^2 * bw_0 - 8 * s_1 * i_7 * bi_0 - 8 * w_1^2 * s_7 * bw_0 - 8 * i_1 * s_7 * bi_0 - 28 * s_2 * w_6^2 * bw_0 - 28 * s_2 * i_6 * bi_0 - 28 * w_2^2 * s_6 * bw_0 - 28 * i_2 * s_6 * bi_0 - 56 * s_3 * w_5^2 * bw_0 - 56 * s_3 * i_5 * bi_0 - 56 * w_3^2 * s_5 * bw_0 - 56 * i_3 * s_5 * bi_0 - 70 * s_4 * w_4^2 * bw_0 - 70 * s_4 * i_4 * bi_0 + i_8 * mu_0 + i_8 * g_0 + i_9,
        s_0 * w_7^2 * bw_0 + s_0 * i_7 * bi_0 + w_0^2 * s_7 * bw_0 + i_0 * s_7 * bi_0 + 7 * s_1 * w_6^2 * bw_0 + 7 * s_1 * i_6 * bi_0 + 7 * w_1^2 * s_6 * bw_0 + 7 * i_1 * s_6 * bi_0 + 21 * s_2 * w_5^2 * bw_0 + 21 * s_2 * i_5 * bi_0 + 21 * w_2^2 * s_5 * bw_0 + 21 * i_2 * s_5 * bi_0 + 35 * s_3 * w_4^2 * bw_0 + 35 * s_3 * i_4 * bi_0 + 35 * w_3^2 * s_4 * bw_0 + 35 * i_3 * s_4 * bi_0 + s_7 * mu_0 - r_7 * al_0^3 + s_8,
        w_7^2 * dz_0^3 - i_7 * dz_0^3 + w_8^2,
        r_6 * mu_0 + r_6 * al_0^3 - i_6 * g_0 + r_7,
        -s_2 - r_2 - i_2 + 3286956482185682686431222531803321115223320200010752219855122776,
        -s_3 - r_3 - i_3 - 4705654008747527529273618515530226431317870998375458445091618733944029436591108388656,
        -s_4 - r_4 - i_4 + 6736681720628508988417409140158641881973865161100004686963903185069277822892243931521245522224101770243936,
        -s_5 - r_5 - i_5 - 9644330101764015237853561965378052156907253196994920478863846742035921447093879629213302464507280001552374275662167013864935616,
        -s_6 - r_6 - i_6 + 13806961196782457060890078850920508542622339152881592659390440444001156364132186830032533273814594354020034435420509742203111799773219993635794445696,
        -s_7 - r_7 - i_7 - 19766243531480585073135057868732574927617969366168750601258549297196656008855738502674597039479274049402541037793441046221906019763768134003864140046950447145117259666176,
        -i_9 * k_0 + 991938839971632107820320973653768192929879462524368893839812738944730516849183932414296413672848091002156883627798597342107782656552683508628399813653218707577491673111389538187569624946356321143574113636101837321150900607906162784262308041914748421662243252384637238497204651550096731133025032471739022385015850558409587701047924436972055595624795558698570423044042284185949499476409846820104733000660929768571426734930592,
        z_aux - 1
    ]    
end
