 Debug: Selecting monomial representation.        
│ Given hint hint=none. Keyword argument monoms=auto
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\input-output\input-output.jl:90
┌ Debug: Frontend: abstractalgebra
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\input-output\input-output.jl:78
┌ Debug: Input: 4 polynomials over zp in 4 variables
│ Ordering: degrevlex
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\input-output\input-output.jl:79
┌ Debug: Internal representation:
│ monomials are Main.Groebner.PackedTuple1{UInt64, 
UInt8}
│ coefficients are UInt64
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\input-output\input-output.jl:82
┌ Debug: Converting input polynomials to internal representation..
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\input-output\input-output.jl:192
┌ Debug: Done converting input polynomials to internal representation.
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\input-output\input-output.jl:195
┌ Debug: Removing zero polynomials
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\input-output\input-output.jl:203
┌ Debug: Selected parameters:
│ target_ord = Main.Groebner.DegRevLex{Nothing}(nothing, false)
│ computation_ord = Main.Groebner.DegRevLex{Nothing}(nothing, false)
│ original_ord = Main.Groebner.DegRevLex{Nothing}(nothing, false)
│ heuristic_check = true
│ randomized_check = true
│ certify_check = false
│ check = true
│ linalg = Main.Groebner.LinearAlgebra(:randomized, :sparse)
│ threaded = yes
│ nworkers = 0
│ threadalgo = compare_and_swap
│ arithmetic = Main.Groebner.SpecializedArithmeticZp{UInt64, false}(0x003fffff18000349, 0x11, 0x000000000800001d)
│ reduced = true
│ homogenize = false
│ maxpairs = 9223372036854775807
│ selection_strategy = normal
│ ground = zp
│ modular_strategy = learn_and_apply
│ majority_threshold = 1
│ crt_algorithm = simultaneous
│ seed = 42
│ rng = Random.Xoshiro(0xa379de7eeeb2a4e8, 0x953dccb6b532b3af, 0xf597b8ff8cfd652a, 0xccd7337c571680d1)│ sweep = false
│ statistics = no
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\groebner\parameters.jl:220
┌ Debug: Internal ordering:
│ Main.Groebner._DegRevLex{true}([1, 2, 3, 4])     
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\input-output\input-output.jl:289
┌ Debug: Backend: F4 over Z_134217757
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\groebner\groebner.jl:80
┌ Debug: Entering F4.
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\f4\f4.jl:674
┌ Debug: After normal selection: available 0 pairs 
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\f4\f4.jl:728
┌ Debug: randomized_sparse_linear_algebra_threaded!└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\f4\linalg.jl:312
┌ Debug: Main.Groebner.MacaulayMatrix{UInt64}      
│ 8 x 15 with 38 nnz (31.67%)
│ A: 6 x 6 with 12 nnz (33.33%) (REF: true, RREF: false)
│ B: 6 x 9 with 17 nnz (31.48%)
│ C: 2 x 6 with 4 nnz (33.33%)
│ D: 2 x 9 with 5 nnz (27.78%)
│ 
│ RREF flag: false
│ 
│ Sparsity pattern:
│ 
│ ⠐⠆⣔⠐⠂│⠀⠄⡄⠠⡀
│ ⠀⠀⠈⠐⠄│⠀⠉⠚⠢⠵
│ ─────⠀─────
│ ⠀⠀⠀⠀⠀│⠀⠀⠀⠀⠀
│ ⢀⠂⡀⠀⡀│⠀⢂⠐⡐⠀
│ 
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\f4\linalg.jl:313
┌ Debug: Before
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\f4\linalg.jl:1805
┌ Debug: 
│   nblocks = 1
│   rowsperblock = 2
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\f4\linalg.jl:1806
┌ Debug: 
│   sentinels =
│    15-element Vector{Int8}:
│     1
│     1
│     1
│     1
│     1
│     1
│     0
│     0
│     0
│     0
│     0
│     0
│     0
│     0
│     0
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\f4\linalg.jl:1807
Vector{Int32}[[2, 7, 10, 12], [1, 3, 8, 11, 6]]
Vector{Int32}[[1, 2, 4, 5, 6], [2, 3, 7, 9, 12], [3, 4, 9, 13], [4, 7, 8, 10, 13], [5, 9, 10, 11, 14], [6, 12, 13, 14, 15], #undef, #undef, #undef, #undef, #undef, #undef, #undef, #undef, #undef]
┌ Debug: After
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\f4\linalg.jl:1903
Vector{UInt64}[[0x0000000000000001, 0x0000000002cb637b, 0x000000000596c6f4, 0x00000000070f7d88, 0x00000000063511eb, 0x000000000707842e, 0x00000000041e1061, 0x000000000343a4c5], [0x0000000000000001, 0x0000000000000002, 0x0000000005b6db87, 0x0000000004924939, 0x0000000004924935, 0x000000000249249a, 0x000000000124924c]]
Vector{Int32}[[1, 2, 4, 5, 6], [2, 3, 7, 9, 12], [3, 4, 9, 13], [4, 7, 8, 10, 13], [5, 9, 10, 11, 14], [6, 12, 13, 14, 15], [7, 8, 9, 10, 11, 12, 13, 14], [8, 9, 10, 11, 12, 13, 14], #undef, #undef, #undef, #undef, #undef, #undef, #undef]
┌ Debug: 
│   sentinels =
│    15-element Vector{Int8}:
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     0
│     0
│     0
│     0
│     0
│     0
│     0
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\f4\linalg.jl:1906
┌ Debug: After normal selection: available 0 pairs
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\f4\f4.jl:728
┌ Debug: randomized_sparse_linear_algebra_threaded!└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\f4\linalg.jl:312
┌ Debug: Main.Groebner.MacaulayMatrix{UInt64}      
│ 20 x 26 with 114 nnz (21.92%)
│ A: 17 x 17 with 45 nnz (15.57%) (REF: true, RREF: false)
│ B: 17 x 9 with 48 nnz (31.37%)
│ C: 3 x 17 with 17 nnz (33.33%)
│ D: 3 x 9 with 4 nnz (14.81%)
│ 
│ RREF flag: false
│ 
│ Sparsity pattern:
│ 
│ ⠑⢮⠄⡀⡇⢀⢈⠆│⠀⡀⢀⠀⠀
│ ⠀⠀⠑⢦⡃⠀⠈⠁│⠀⢎⠐⡅⠀
│ ⠀⠀⠀⠀⠑⢤⡠⠀│⠀⠛⢫⠙⢄
│ ⠀⠀⠀⠀⠀⠀⠙⢅│⠀⠀⢰⣷⢾
│ ────────⠀─────
│ ⠀⠀⠀⠀⠀⠀⠀⠀│⠀⠀⠀⠀⠀
│ ⡠⠈⢀⢄⢅⡠⡨⢁│⠀⠌⠠⠁⠀
│ 
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\f4\linalg.jl:313
┌ Debug: Before
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\f4\linalg.jl:1805
┌ Debug: 
│   nblocks = 2
│   rowsperblock = 2
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\f4\linalg.jl:1806
┌ Debug: 
│   sentinels =
│    26-element Vector{Int8}:
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     0
│     0
│     0
│     0
│     0
│     0
│     0
│     0
│     0
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\f4\linalg.jl:1807
Vector{Int32}[[4, 9, 10, 19, 15, 16, 22], [2, 7, 9, 18, 13, 15, 21], [1, 6, 8, 11, 12, 14, 17]]
Vector{Int32}[[1, 4, 10, 15], [2, 3, 9, 16], [3, 4, 5, 10, 16], [4, 7, 9, 18, 13, 15, 21], [5, 9, 10, 
19, 15, 16, 22], [6, 7, 9, 18, 21], [7, 8, 18, 22], [8, 9, 10, 19, 22], [9, 18, 19, 20, 21, 22, 23], [10, 18, 19, 20, 21, 22, 23], [11, 18, 19, 20, 23], 
[12, 13, 15, 21, 24], [13, 14, 21, 25], [14, 15, 16, 22, 25], [15, 21, 22, 23, 24, 25, 26], [16, 21, 22, 23, 24, 25, 26], [17, 21, 22, 23, 26], #undef, #undef, #undef, #undef, #undef, #undef, #undef, #undef, #undef]
┌ Debug: After
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\f4\linalg.jl:1903
Vector{UInt64}[[0x0000000000000001, 0x000000000800001b, 0x000000000124924a, 0x0000000005b6db7f, 0x0000000001b6db74, 0x0000000006db6dd0, 0x00000000036db6e9], [0x0000000000000001, 0x0000000000000002, 0x0000000005b6db87, 0x0000000004924939, 0x0000000004924935, 0x000000000249249a, 0x000000000124924c], [0x0000000000000001, 0x00000000071c71e2, 0x000000000071c71e, 0x0000000004587e7b, 0x0000000003da1304, 0x0000000007da1313, 0x00000000026b74f9, 0x0000000007b42609]]
Vector{Int32}[[1, 4, 10, 15], [2, 3, 9, 16], [3, 4, 5, 10, 16], [4, 7, 9, 18, 13, 15, 21], [5, 9, 10, 
19, 15, 16, 22], [6, 7, 9, 18, 21], [7, 8, 18, 22], [8, 9, 10, 19, 22], [9, 18, 19, 20, 21, 22, 23], [10, 18, 19, 20, 21, 22, 23], [11, 18, 19, 20, 23], 
[12, 13, 15, 21, 24], [13, 14, 21, 25], [14, 15, 16, 22, 25], [15, 21, 22, 23, 24, 25, 26], [16, 21, 22, 23, 24, 25, 26], [17, 21, 22, 23, 26], [18, 19, 
20, 21, 22, 23, 24, 25, 26], [19, 20, 21, 22, 23, 24, 25, 26], #undef, #undef, #undef, #undef, #undef, #undef, #undef]
┌ Debug: 
│   sentinels =
│    26-element Vector{Int8}:
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     1
│     0
│     0
│     0
│     0
│     0
│     0
│     0
└ @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\f4\linalg.jl:1906
ERROR: AssertionError: length(nnz_column_indices) == length(nnz_coeffs)
Stacktrace:
  [1] macro expansion
    @ c:\data\projects\gbgb\Groebner.jl\src\f4\linalg.jl:1402 [inlined]
  [2] interreduce_matrix_pivots!(matrix::Main.Groebner.MacaulayMatrix{UInt64}, basis::Main.Groebner.Basis{UInt64}, arithmetic::Main.Groebner.SpecializedArithmeticZp{UInt64, false}; reversed_rows::Bool)
    @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\utils\timeit.jl:101
  [3] interreduce_matrix_pivots!
    @ c:\data\projects\gbgb\Groebner.jl\src\utils\timeit.jl:98 [inlined]
  [4] randomized_sparse_linear_algebra_threaded!(matrix::Main.Groebner.MacaulayMatrix{UInt64}, basis::Main.Groebner.Basis{UInt64}, linalg::Main.Groebner.LinearAlgebra, nworkers::Int64, arithmetic::Main.Groebner.SpecializedArithmeticZp{UInt64, false}, rng::Random.Xoshiro)
    @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\f4\linalg.jl:323
  [5] linear_algebra!(matrix::Main.Groebner.MacaulayMatrix{UInt64}, basis::Main.Groebner.Basis{UInt64}, linalg::Main.Groebner.LinearAlgebra, threaded::Symbol, nworkers::Int64, threadalgo::Symbol, arithmetic::Main.Groebner.SpecializedArithmeticZp{UInt64, false}, rng::Random.Xoshiro)
    @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\f4\linalg.jl:195
  [6] #linear_algebra!#280
    @ c:\data\projects\gbgb\Groebner.jl\src\f4\linalg.jl:110 [inlined]
  [7] linear_algebra! (repeats 2 times)
    @ c:\data\projects\gbgb\Groebner.jl\src\f4\linalg.jl:68 [inlined]
  [8] macro expansion
    @ c:\data\projects\gbgb\Groebner.jl\src\f4\f4.jl:84 [inlined]
  [9] reduction!
    @ c:\data\projects\gbgb\Groebner.jl\src\utils\timeit.jl:101 [inlined]
 [10] macro expansion
    @ c:\data\projects\gbgb\Groebner.jl\src\f4\f4.jl:733 [inlined]
 [11] f4!(ring::Main.Groebner.PolyRing{Main.Groebner._DegRevLex{true}}, basis::Main.Groebner.Basis{UInt64}, pairset::Main.Groebner.Pairset{UInt32}, hashtable::Main.Groebner.MonomialHashtable{Main.Groebner.PackedTuple1{UInt64, UInt8}, Main.Groebner._DegRevLex{true}}, tracer::Main.Groebner.TinyTraceF4, params::Main.Groebner.AlgorithmParameters{Main.Groebner.DegRevLex{Nothing}, Main.Groebner.DegRevLex{Nothing}, Main.Groebner.DegRevLex{Nothing}, Main.Groebner.SpecializedArithmeticZp{UInt64, false}})   
    @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\utils\timeit.jl:101
 [12] macro expansion
    @ c:\data\projects\gbgb\Groebner.jl\src\groebner\groebner.jl:85 [inlined]
 [13] _groebner(ring::Main.Groebner.PolyRing{Main.Groebner._DegRevLex{true}}, monoms::Vector{Vector{Main.Groebner.PackedTuple1{UInt64, UInt8}}}, coeffs::Vector{Vector{UInt64}}, params::Main.Groebner.AlgorithmParameters{Main.Groebner.DegRevLex{Nothing}, Main.Groebner.DegRevLex{Nothing}, Main.Groebner.DegRevLex{Nothing}, Main.Groebner.SpecializedArithmeticZp{UInt64, false}})
    @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\utils\timeit.jl:101
 [14] _groebner(polynomials::Vector{AbstractAlgebra.Generic.MPoly{AbstractAlgebra.GFElem{Int64}}}, kws::Main.Groebner.KeywordsHandler{Main.Groebner.InputOrdering}, representation::Main.Groebner.PolynomialRepresentation)
    @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\groebner\groebner.jl:53
 [15] _groebner(polynomials::Vector{AbstractAlgebra.Generic.MPoly{AbstractAlgebra.GFElem{Int64}}}, kws::Main.Groebner.KeywordsHandler{Main.Groebner.InputOrdering})
    @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\groebner\groebner.jl:12
 [16] groebner(polynomials::Vector{AbstractAlgebra.Generic.MPoly{AbstractAlgebra.GFElem{Int64}}}; options::Base.Pairs{Symbol, Any, NTuple{4, Symbol}, NamedTuple{(:linalg, :threaded, :loglevel, :threadalgo), Tuple{Symbol, Symbol, Int64, Symbol}}})
    @ Main.Groebner c:\data\projects\gbgb\Groebner.jl\src\interface.jl:100
 [17] macro expansion
    @ .\timing.jl:273 [inlined]
 [18] top-level scope
    @ c:\data\projects\gbgb\Groebner.jl\experimental\example-maybe-bug.jl:34